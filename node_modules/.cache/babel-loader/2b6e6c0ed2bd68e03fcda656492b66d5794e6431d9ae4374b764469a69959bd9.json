{"ast":null,"code":"var _jsxFileName = \"/Users/piyushbhawsar/Desktop/scrimbaVerse/Scrimba-React/tenziesGame/src/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [dice, setDice] = React.useState(allNewDie());\n  function generateDieInstance() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid\n    };\n  }\n  function allNewDie() {\n    const newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(generateDieInstance());\n    }\n    return newDice;\n  }\n\n  // function holdDie(id) {\n  //   //find this id's obj in the dice arrOfObj & flip isHeld\n  //   setDice(prevDice => prevDice.map(dieObj => {\n  //     return dieObj.id===id ? \n  //       {\n  //         ...dieObj ,\n  //         isHeld: !dieObj.isHeld\n  //       } :\n  //       dieObj\n  //     }\n  //   ))\n  // }\n  function holdDie(id) {\n    setDice(oldDice => oldDice.map(die => {\n      return die.id === id ? {\n        ...die,\n        isHeld: !die.isHeld\n      } : die;\n    }));\n  }\n  const dieElements = dice.map(dieObj => /*#__PURE__*/_jsxDEV(Die, {\n    value: dieObj.value,\n    isHeld: dieObj.isHeld,\n    holdDie: () => holdDie(dieObj.id)\n  }, dieObj.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this));\n  function rollDie() {\n    //roll only thode jinka isHeld false\n    setDice(oldDice => oldDice.map(oldDiceObj => {\n      return oldDiceObj.isHeld ? oldDiceObj : generateDieInstance();\n    }));\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice-container\",\n      children: dieElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"roll-dice\",\n      onClick: rollDie,\n      children: \"Roll Dice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1JOKgdGH2rHPJ0wKfFHcssF6710=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Die","nanoid","jsxDEV","_jsxDEV","App","_s","dice","setDice","useState","allNewDie","generateDieInstance","value","Math","ceil","random","isHeld","id","newDice","i","push","holdDie","oldDice","map","die","dieElements","dieObj","fileName","_jsxFileName","lineNumber","columnNumber","rollDie","oldDiceObj","children","className","onClick","_c","$RefreshReg$"],"sources":["/Users/piyushbhawsar/Desktop/scrimbaVerse/Scrimba-React/tenziesGame/src/App.js"],"sourcesContent":["import React from \"react\"\nimport Die from \"./Die\"\nimport { nanoid } from \"nanoid\"\n\nexport default function App() {\n  const [dice, setDice] = React.useState(allNewDie())\n  function generateDieInstance() {\n    return ({\n        value: Math.ceil(Math.random()*6),\n        isHeld: false,\n        id: nanoid,\n    })\n  }\n  function allNewDie(){\n    const newDice = []\n    for (let i = 0 ; i<10 ; i++) {\n      newDice.push(generateDieInstance())\n    }\n    return newDice\n  }\n\n  // function holdDie(id) {\n  //   //find this id's obj in the dice arrOfObj & flip isHeld\n  //   setDice(prevDice => prevDice.map(dieObj => {\n  //     return dieObj.id===id ? \n  //       {\n  //         ...dieObj ,\n  //         isHeld: !dieObj.isHeld\n  //       } :\n  //       dieObj\n  //     }\n  //   ))\n  // }\n  function holdDie(id) {\n    setDice(oldDice => oldDice.map(die => {\n        return die.id === id ? \n            {...die, isHeld: !die.isHeld} :\n            die\n    }))\n}\n  const dieElements = dice.map(dieObj => (\n    <Die \n      key={dieObj.id} \n      value={dieObj.value} \n      isHeld={dieObj.isHeld}\n      holdDie={() => holdDie(dieObj.id)}\n    />\n  ))\n  function rollDie() {\n    //roll only thode jinka isHeld false\n    setDice(oldDice => oldDice.map(oldDiceObj => {\n      return oldDiceObj.isHeld ? \n        oldDiceObj :\n        generateDieInstance()\n    })\n    )\n  }\n\n  return (\n    <main>\n      <div className=\"dice-container\">\n        {dieElements}\n      </div>\n      <button\n        className=\"roll-dice\"\n        onClick={rollDie}\n      >\n        Roll Dice\n      </button>\n    </main>\n  )\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,MAAM,QAAQ,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAACC,SAAS,EAAE,CAAC;EACnD,SAASC,mBAAmBA,CAAA,EAAG;IAC7B,OAAQ;MACJC,KAAK,EAAEC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,CAAC,CAAC;MACjCC,MAAM,EAAE,KAAK;MACbC,EAAE,EAAEf;IACR,CAAC;EACH;EACA,SAASQ,SAASA,CAAA,EAAE;IAClB,MAAMQ,OAAO,GAAG,EAAE;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAGA,CAAC,GAAC,EAAE,EAAGA,CAAC,EAAE,EAAE;MAC3BD,OAAO,CAACE,IAAI,CAACT,mBAAmB,EAAE,CAAC;IACrC;IACA,OAAOO,OAAO;EAChB;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,SAASG,OAAOA,CAACJ,EAAE,EAAE;IACnBT,OAAO,CAACc,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACC,GAAG,IAAI;MAClC,OAAOA,GAAG,CAACP,EAAE,KAAKA,EAAE,GAChB;QAAC,GAAGO,GAAG;QAAER,MAAM,EAAE,CAACQ,GAAG,CAACR;MAAM,CAAC,GAC7BQ,GAAG;IACX,CAAC,CAAC,CAAC;EACP;EACE,MAAMC,WAAW,GAAGlB,IAAI,CAACgB,GAAG,CAACG,MAAM,iBACjCtB,OAAA,CAACH,GAAG;IAEFW,KAAK,EAAEc,MAAM,CAACd,KAAM;IACpBI,MAAM,EAAEU,MAAM,CAACV,MAAO;IACtBK,OAAO,EAAEA,CAAA,KAAMA,OAAO,CAACK,MAAM,CAACT,EAAE;EAAE,GAH7BS,MAAM,CAACT,EAAE;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAKjB,CAAC;EACF,SAASC,OAAOA,CAAA,EAAG;IACjB;IACAvB,OAAO,CAACc,OAAO,IAAIA,OAAO,CAACC,GAAG,CAACS,UAAU,IAAI;MAC3C,OAAOA,UAAU,CAAChB,MAAM,GACtBgB,UAAU,GACVrB,mBAAmB,EAAE;IACzB,CAAC,CAAC,CACD;EACH;EAEA,oBACEP,OAAA;IAAA6B,QAAA,gBACE7B,OAAA;MAAK8B,SAAS,EAAC,gBAAgB;MAAAD,QAAA,EAC5BR;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACR,eACN1B,OAAA;MACE8B,SAAS,EAAC,WAAW;MACrBC,OAAO,EAAEJ,OAAQ;MAAAE,QAAA,EAClB;IAED;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACJ;AAEX;AAACxB,EAAA,CAnEuBD,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}